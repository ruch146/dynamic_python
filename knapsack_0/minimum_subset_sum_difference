array=[1,6,11,5]
def minimum_subset_sum_difference(array):
    target_sum=sum(array)
    n=len(array)
    t=[[False for j in range(target_sum+1)] for i in range(n+1)]
    for i in range(n+1):
        for j in range(target_sum+1):
            if i==0:
                t[i][j]=False
            if j==0:
                t[i][j]=True
    
    for i in range(1,n+1):
        for j in range(1,target_sum+1):
            if array[i-1]<=j:
                t[i][j]=t[i-1][j-array[i-1]] or t[i-1][j]
            else:
                t[i][j]=t[i-1][j]
    
    ar=[]#exist kiska karta sum            
    #accesing last column
    for j in range(target_sum+1):
        if t[n][j]:
            ar.append(j)
    print(ar)
    mini=float('inf')
    for i in range(len(ar)//2):
        mini=min(mini,abs(target_sum-2*(ar[i])))
    print(mini)
        

minimum_subset_sum_difference(array)
    
